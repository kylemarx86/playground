$phase_shift: 2;

* {
  box-sizing: border-box;
}

html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  background-color: #242424;
}
.container{
  width: 100%;
  height: 50%;
  display: inline-block;
  position: relative;
}
.column{
  position: relative;
  display: inline-block;
  height: 100%;
  // width: 10px;
  
  animation: upDown 2.5s alternate infinite ease-in-out;
}
.blob{
  display: inline-block;
  height: 5px;
  width: 5px;
  background: darkorange;
  position: absolute;
  // top: 50%;
  // transform: translateY(-50%);
//   animation: upDown 2.5s alternate infinite ease-in-out;
}
.column:nth-of-type(odd) .blob {
  background: blue;
}
// $n: 7;

// timing function
$easeOutSine: cubic-bezier(.39, .57, .56, 1);

@mixin sine-setup($elt-count) {
    .column{
        @for $i from 0 through $elt-count{
          &:nth-of-type(#{$i}) {
            width: 100% / $elt-count;
            // animation: loadIn 1.35s #{$i*0.1}s $easeOutSine forwards infinite;
            animation: loadIn 1.25s #{$i*0.1}s $easeOutSine alternate infinite;
            // alternate
          }
        }
    }
}

@include sine-setup(18);


// $easeInSine: cubic-bezier(.73, .26, .92, .65);


@keyframes loadIn {
	100% {
		// transform: rotateX(180deg) translateZ(100px) rotateY(180deg);
    transform: rotateX(180deg);
	}
}



@keyframes upDown{
  to { 
    /* bottom: 0; */
    transform: translateY(100%);
  }
}
